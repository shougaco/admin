@page "/members/add"
@inject ISnackbar Snackbar
@inject NavigationManager _navigationManager
@inject IJSRuntime _jsRuntime



<MudContainer MaxWidth="MaxWidth.Large">
    <MudGrid>

        <PageToolbar Title="Add a new member" BackPath="members">
            <AdditionalButtons>
                <MudLink Class="text-nowrap" Href="members/add/new"> Create new User</MudLink>
            </AdditionalButtons>
        </PageToolbar>

        <MudItem xs="12" lg="12">
            <MudPaper Elevation="25" Class="p-4">
                <MudText Class="pb-3 text-nowrap fw-bold" Typo="Typo.body1">Member details</MudText>
                <EditForm Model="@Member" OnValidSubmit="OnValidSubmit">
                    <DataAnnotationsValidator/>

                    <MudTextField Label="Username" HelperText="Max. 10 characters" @bind-Value="Username" For="@(() => Username)" />
                        
                    <MudCardActions Class="mt-4">
                        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Register</MudButton>
                        
                    </MudCardActions>
                </EditForm>
            </MudPaper>
        </MudItem>
    </MudGrid>

</MudContainer>



@code {
    bool success;

    private Member Member = new Member();

    private string Username { get; set; }

    private async Task OnValidSubmit() 
    {
        Member.CompanyId = _stateContainer.Company.Id;
        using var response = await _client.PostAsJsonAsync($"/api/member?username={Username}", Member);

        if(response.IsSuccessStatusCode)
        {
            success = true;
            Snackbar.Add($"New Member is created", Severity.Success);
            _navigationManager.NavigateTo($"/members");
        }
        else
        {
            success = false;
            var error = await response.Content.ReadAsStringAsync();
            Snackbar.Add($"{error}", Severity.Error);
            
        }
    }

    private void Navigate(string url)
    {
        _navigationManager.NavigateTo(url);
    }
}