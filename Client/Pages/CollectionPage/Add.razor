@page "/collections/add"


<MudContainer MaxWidth="MaxWidth.Large">
    <MudGrid>
        <MudItem xs="12" lg="12">
            <Navigation />
            <MudPaper Elevation="25" >
                <MudToolBar>
                    <MudIconButton Icon="@Icons.Material.Outlined.ArrowBack" Color="Color.Inherit" Class="mr-1" OnClick='@(() => Navigate("collections"))'/>
                    <MudText Class="py-1 text-nowrap" Typo="Typo.body1">Add a new Collection</MudText>
                    <MudSpacer />
                    <MudIconButton Icon="@Icons.Material.Outlined.MoreVert" Color="Color.Inherit" />
                </MudToolBar>
            </MudPaper>
        </MudItem>

        <MudItem xs="12" lg="12">
            <MudPaper Elevation="25" Class="p-4">
                <MudText Class="pb-3 text-nowrap fw-bold" Typo="Typo.body1">Collection details</MudText>
                <EditForm Model="@Collection" OnValidSubmit="OnValidSubmit">
                    <DataAnnotationsValidator/>

                    <MudTextField Label="Name" HelperText="Max. 10 characters" @bind-Value="Collection.Name" For="@(() => Collection.Name)" />
                    <MudTextField Label="Description" HelperText="Max. 10 characters" @bind-Value="Collection.Description" For="@(() => Collection.Description)" />
                    <MudTextField Immediate="true" Label="Handle" HelperText="@HandleHelperText" @bind-Value='Collection.Handle' For="@(() => Collection.Handle)" />
                        
                    <MudCardActions>
                        <MudButton ButtonType="ButtonType.Submit" Variant="MudBlazor.Variant.Filled" Color="Color.Primary" Class="ml-auto">Add</MudButton>
                    </MudCardActions>
                </EditForm>
            </MudPaper>
        </MudItem>
    </MudGrid>

</MudContainer>
    



@code {
    bool success;

    private Collection Collection = new Collection();

    private string HandleHelperText => !String.IsNullOrEmpty(Collection.Handle) ? Collection.Handle.Replace(" ", "-") : "";

    private async Task OnValidSubmit() 
    {
        Collection.CompanyId = _stateContainer.Company.Id;
        Collection.Handle = HandleHelperText;

        var response = await _client.PostAsJsonAsync("/api/Collection", Collection);

        if(response.IsSuccessStatusCode)
        {
            success = true;
            Snackbar.Add($"New Collection is created", Severity.Success);
            _navigationManager.NavigateTo($"/collections");
        }
        else
        {
            success = false;
            var error = await response.Content.ReadAsStringAsync();
            Snackbar.Add($"{error}", Severity.Error);
            
        }
    }

    private void Navigate(string url)
    {
        _navigationManager.NavigateTo(url);
    }
}