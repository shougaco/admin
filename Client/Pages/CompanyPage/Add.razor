@page "/company/add"





<div class="container my-5 bg-white rounded rounded-5 border shadow-sm p-5">
    
    <Navigation />

    <MudText Class="mb-4" Typo="Typo.h6">Add a new Company</MudText>

    <EditForm Model="@Company" OnValidSubmit="OnValidSubmit" OnInvalidSubmit="OnInvalidSubmit">
        <DataAnnotationsValidator/>

        <MudTextField Label="Name" HelperText="Max. 20 characters" @bind-Value="Company.Name" For="@(() => Company.Name)" />
            
        <MudTextField Label="Handle" HelperText="Max. 10 characters" @bind-Value='Company.Slug' For="@(() => Company.Slug)"/>

        <MudSwitch Class="my-5" @bind-Checked="isCustomer" Color="Color.Error"> I am a <strong>@(companyType.ToString().ToUpper())</strong></MudSwitch>

        <MudCardActions>
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Register</MudButton>
        </MudCardActions>
    </EditForm>


</div>



@code {

    bool success;

    public bool isCustomer { get; set; } = true;

    public CompanyType companyType => isCustomer ? CompanyType.Customer : CompanyType.Supplier;

    private Company Company = new Company();

    private async Task OnValidSubmit() 
    {
        Company.Type = companyType;
        using var response = await _client.PostAsJsonAsync("/api/company", Company);

        if(response.IsSuccessStatusCode)
        {
            success = true;
            _stateContainer.Company = response.Content.ReadFromJsonAsync<Company>().Result;
            await _stateContainer.SaveInSessionStorage(_jsRuntime,  "company", _stateContainer.Company.Id);
            _navigationManager.NavigateTo($"company/{true}", true);
            
        }
        else if(response.StatusCode == System.Net.HttpStatusCode.Conflict)
        {
            success = false;
            var error = await response.Content.ReadAsStringAsync();
            Snackbar.Add($"{error}", Severity.Error);
            
        }
    }

    private void OnInvalidSubmit()
    {
        success = false;
        Snackbar.Add($"Something went wrong! Please make sure you filled all the highlighted fields", Severity.Error);
    }
}